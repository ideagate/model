// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "dashboard/service.proto" (package "dashboard", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DashboardService } from "./service";
import type { DeleteWorkflowResponse } from "./workflow";
import type { DeleteWorkflowRequest } from "./workflow";
import type { UpdateWorkflowResponse } from "./workflow";
import type { UpdateWorkflowRequest } from "./workflow";
import type { CreateWorkflowResponse } from "./workflow";
import type { CreateWorkflowRequest } from "./workflow";
import type { GetWorkflowsResponse } from "./workflow";
import type { GetWorkflowsRequest } from "./workflow";
import type { DeleteEndpointResponse } from "./endpoint";
import type { DeleteEndpointRequest } from "./endpoint";
import type { UpdateEndpointResponse } from "./endpoint";
import type { UpdateEndpointRequest } from "./endpoint";
import type { CreateEndpointResponse } from "./endpoint";
import type { CreateEndpointRequest } from "./endpoint";
import type { GetListEndpointResponse } from "./endpoint";
import type { GetListEndpointRequest } from "./endpoint";
import type { DeleteApplicationResponse } from "./application";
import type { DeleteApplicationRequest } from "./application";
import type { UpdateApplicationResponse } from "./application";
import type { UpdateApplicationRequest } from "./application";
import type { CreateApplicationResponse } from "./application";
import type { CreateApplicationRequest } from "./application";
import type { GetListApplicationResponse } from "./application";
import type { GetListApplicationRequest } from "./application";
import type { DeleteProjectResponse } from "./project";
import type { DeleteProjectRequest } from "./project";
import type { UpdateProjectResponse } from "./project";
import type { UpdateProjectRequest } from "./project";
import type { CreateProjectResponse } from "./project";
import type { CreateProjectRequest } from "./project";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetListProjectResponse } from "./project";
import type { GetListProjectRequest } from "./project";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service dashboard.DashboardService
 */
export interface IDashboardServiceClient {
    /**
     * @generated from protobuf rpc: GetListProject(dashboard.GetListProjectRequest) returns (dashboard.GetListProjectResponse);
     */
    getListProject(input: GetListProjectRequest, options?: RpcOptions): UnaryCall<GetListProjectRequest, GetListProjectResponse>;
    /**
     * @generated from protobuf rpc: CreateProject(dashboard.CreateProjectRequest) returns (dashboard.CreateProjectResponse);
     */
    createProject(input: CreateProjectRequest, options?: RpcOptions): UnaryCall<CreateProjectRequest, CreateProjectResponse>;
    /**
     * @generated from protobuf rpc: UpdateProject(dashboard.UpdateProjectRequest) returns (dashboard.UpdateProjectResponse);
     */
    updateProject(input: UpdateProjectRequest, options?: RpcOptions): UnaryCall<UpdateProjectRequest, UpdateProjectResponse>;
    /**
     * @generated from protobuf rpc: DeleteProject(dashboard.DeleteProjectRequest) returns (dashboard.DeleteProjectResponse);
     */
    deleteProject(input: DeleteProjectRequest, options?: RpcOptions): UnaryCall<DeleteProjectRequest, DeleteProjectResponse>;
    /**
     * @generated from protobuf rpc: GetListApplication(dashboard.GetListApplicationRequest) returns (dashboard.GetListApplicationResponse);
     */
    getListApplication(input: GetListApplicationRequest, options?: RpcOptions): UnaryCall<GetListApplicationRequest, GetListApplicationResponse>;
    /**
     * @generated from protobuf rpc: CreateApplication(dashboard.CreateApplicationRequest) returns (dashboard.CreateApplicationResponse);
     */
    createApplication(input: CreateApplicationRequest, options?: RpcOptions): UnaryCall<CreateApplicationRequest, CreateApplicationResponse>;
    /**
     * @generated from protobuf rpc: UpdateApplication(dashboard.UpdateApplicationRequest) returns (dashboard.UpdateApplicationResponse);
     */
    updateApplication(input: UpdateApplicationRequest, options?: RpcOptions): UnaryCall<UpdateApplicationRequest, UpdateApplicationResponse>;
    /**
     * @generated from protobuf rpc: DeleteApplication(dashboard.DeleteApplicationRequest) returns (dashboard.DeleteApplicationResponse);
     */
    deleteApplication(input: DeleteApplicationRequest, options?: RpcOptions): UnaryCall<DeleteApplicationRequest, DeleteApplicationResponse>;
    /**
     * @generated from protobuf rpc: GetListEndpoint(dashboard.GetListEndpointRequest) returns (dashboard.GetListEndpointResponse);
     */
    getListEndpoint(input: GetListEndpointRequest, options?: RpcOptions): UnaryCall<GetListEndpointRequest, GetListEndpointResponse>;
    /**
     * @generated from protobuf rpc: CreateEndpoint(dashboard.CreateEndpointRequest) returns (dashboard.CreateEndpointResponse);
     */
    createEndpoint(input: CreateEndpointRequest, options?: RpcOptions): UnaryCall<CreateEndpointRequest, CreateEndpointResponse>;
    /**
     * @generated from protobuf rpc: UpdateEndpoint(dashboard.UpdateEndpointRequest) returns (dashboard.UpdateEndpointResponse);
     */
    updateEndpoint(input: UpdateEndpointRequest, options?: RpcOptions): UnaryCall<UpdateEndpointRequest, UpdateEndpointResponse>;
    /**
     * @generated from protobuf rpc: DeleteEndpoint(dashboard.DeleteEndpointRequest) returns (dashboard.DeleteEndpointResponse);
     */
    deleteEndpoint(input: DeleteEndpointRequest, options?: RpcOptions): UnaryCall<DeleteEndpointRequest, DeleteEndpointResponse>;
    /**
     * @generated from protobuf rpc: GetWorkflows(dashboard.GetWorkflowsRequest) returns (dashboard.GetWorkflowsResponse);
     */
    getWorkflows(input: GetWorkflowsRequest, options?: RpcOptions): UnaryCall<GetWorkflowsRequest, GetWorkflowsResponse>;
    /**
     * @generated from protobuf rpc: CreateWorkflow(dashboard.CreateWorkflowRequest) returns (dashboard.CreateWorkflowResponse);
     */
    createWorkflow(input: CreateWorkflowRequest, options?: RpcOptions): UnaryCall<CreateWorkflowRequest, CreateWorkflowResponse>;
    /**
     * @generated from protobuf rpc: UpdateWorkflow(dashboard.UpdateWorkflowRequest) returns (dashboard.UpdateWorkflowResponse);
     */
    updateWorkflow(input: UpdateWorkflowRequest, options?: RpcOptions): UnaryCall<UpdateWorkflowRequest, UpdateWorkflowResponse>;
    /**
     * @generated from protobuf rpc: DeleteWorkflow(dashboard.DeleteWorkflowRequest) returns (dashboard.DeleteWorkflowResponse);
     */
    deleteWorkflow(input: DeleteWorkflowRequest, options?: RpcOptions): UnaryCall<DeleteWorkflowRequest, DeleteWorkflowResponse>;
}
/**
 * @generated from protobuf service dashboard.DashboardService
 */
export class DashboardServiceClient implements IDashboardServiceClient, ServiceInfo {
    typeName = DashboardService.typeName;
    methods = DashboardService.methods;
    options = DashboardService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetListProject(dashboard.GetListProjectRequest) returns (dashboard.GetListProjectResponse);
     */
    getListProject(input: GetListProjectRequest, options?: RpcOptions): UnaryCall<GetListProjectRequest, GetListProjectResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListProjectRequest, GetListProjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateProject(dashboard.CreateProjectRequest) returns (dashboard.CreateProjectResponse);
     */
    createProject(input: CreateProjectRequest, options?: RpcOptions): UnaryCall<CreateProjectRequest, CreateProjectResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateProjectRequest, CreateProjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateProject(dashboard.UpdateProjectRequest) returns (dashboard.UpdateProjectResponse);
     */
    updateProject(input: UpdateProjectRequest, options?: RpcOptions): UnaryCall<UpdateProjectRequest, UpdateProjectResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateProjectRequest, UpdateProjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteProject(dashboard.DeleteProjectRequest) returns (dashboard.DeleteProjectResponse);
     */
    deleteProject(input: DeleteProjectRequest, options?: RpcOptions): UnaryCall<DeleteProjectRequest, DeleteProjectResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteProjectRequest, DeleteProjectResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetListApplication(dashboard.GetListApplicationRequest) returns (dashboard.GetListApplicationResponse);
     */
    getListApplication(input: GetListApplicationRequest, options?: RpcOptions): UnaryCall<GetListApplicationRequest, GetListApplicationResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListApplicationRequest, GetListApplicationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateApplication(dashboard.CreateApplicationRequest) returns (dashboard.CreateApplicationResponse);
     */
    createApplication(input: CreateApplicationRequest, options?: RpcOptions): UnaryCall<CreateApplicationRequest, CreateApplicationResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateApplicationRequest, CreateApplicationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateApplication(dashboard.UpdateApplicationRequest) returns (dashboard.UpdateApplicationResponse);
     */
    updateApplication(input: UpdateApplicationRequest, options?: RpcOptions): UnaryCall<UpdateApplicationRequest, UpdateApplicationResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateApplicationRequest, UpdateApplicationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteApplication(dashboard.DeleteApplicationRequest) returns (dashboard.DeleteApplicationResponse);
     */
    deleteApplication(input: DeleteApplicationRequest, options?: RpcOptions): UnaryCall<DeleteApplicationRequest, DeleteApplicationResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteApplicationRequest, DeleteApplicationResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetListEndpoint(dashboard.GetListEndpointRequest) returns (dashboard.GetListEndpointResponse);
     */
    getListEndpoint(input: GetListEndpointRequest, options?: RpcOptions): UnaryCall<GetListEndpointRequest, GetListEndpointResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListEndpointRequest, GetListEndpointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateEndpoint(dashboard.CreateEndpointRequest) returns (dashboard.CreateEndpointResponse);
     */
    createEndpoint(input: CreateEndpointRequest, options?: RpcOptions): UnaryCall<CreateEndpointRequest, CreateEndpointResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateEndpointRequest, CreateEndpointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateEndpoint(dashboard.UpdateEndpointRequest) returns (dashboard.UpdateEndpointResponse);
     */
    updateEndpoint(input: UpdateEndpointRequest, options?: RpcOptions): UnaryCall<UpdateEndpointRequest, UpdateEndpointResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateEndpointRequest, UpdateEndpointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteEndpoint(dashboard.DeleteEndpointRequest) returns (dashboard.DeleteEndpointResponse);
     */
    deleteEndpoint(input: DeleteEndpointRequest, options?: RpcOptions): UnaryCall<DeleteEndpointRequest, DeleteEndpointResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteEndpointRequest, DeleteEndpointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetWorkflows(dashboard.GetWorkflowsRequest) returns (dashboard.GetWorkflowsResponse);
     */
    getWorkflows(input: GetWorkflowsRequest, options?: RpcOptions): UnaryCall<GetWorkflowsRequest, GetWorkflowsResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetWorkflowsRequest, GetWorkflowsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateWorkflow(dashboard.CreateWorkflowRequest) returns (dashboard.CreateWorkflowResponse);
     */
    createWorkflow(input: CreateWorkflowRequest, options?: RpcOptions): UnaryCall<CreateWorkflowRequest, CreateWorkflowResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateWorkflowRequest, CreateWorkflowResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateWorkflow(dashboard.UpdateWorkflowRequest) returns (dashboard.UpdateWorkflowResponse);
     */
    updateWorkflow(input: UpdateWorkflowRequest, options?: RpcOptions): UnaryCall<UpdateWorkflowRequest, UpdateWorkflowResponse> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateWorkflowRequest, UpdateWorkflowResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteWorkflow(dashboard.DeleteWorkflowRequest) returns (dashboard.DeleteWorkflowResponse);
     */
    deleteWorkflow(input: DeleteWorkflowRequest, options?: RpcOptions): UnaryCall<DeleteWorkflowRequest, DeleteWorkflowResponse> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteWorkflowRequest, DeleteWorkflowResponse>("unary", this._transport, method, opt, input);
    }
}

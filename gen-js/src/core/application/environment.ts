// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "core/application/environment.proto" (package "application", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../google/protobuf/timestamp";
/**
 * @generated from protobuf message application.Environment
 */
export interface Environment {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp created_at = 2;
     */
    createdAt?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp updated_at = 3;
     */
    updatedAt?: Timestamp;
    /**
     * @generated from protobuf field: string project_id = 4;
     */
    projectId: string;
    /**
     * @generated from protobuf field: string application_id = 5;
     */
    applicationId: string;
    /**
     * @generated from protobuf field: string name = 6;
     */
    name: string;
    /**
     * @generated from protobuf field: map<string, application.EnvironmentEntrypoints> entrypoints = 7;
     */
    entrypoints: {
        [key: string]: EnvironmentEntrypoints;
    };
}
/**
 * @generated from protobuf message application.EnvironmentEntrypoints
 */
export interface EnvironmentEntrypoints {
    /**
     * @generated from protobuf field: application.EnvironmentRollout rollout = 1;
     */
    rollout?: EnvironmentRollout;
}
/**
 * @generated from protobuf message application.EnvironmentRollout
 */
export interface EnvironmentRollout {
    /**
     * @generated from protobuf field: application.EnvironmentRolloutItem canary = 1;
     */
    canary?: EnvironmentRolloutItem;
    /**
     * @generated from protobuf field: application.EnvironmentRolloutItem stable = 2;
     */
    stable?: EnvironmentRolloutItem;
}
/**
 * @generated from protobuf message application.EnvironmentRolloutItem
 */
export interface EnvironmentRolloutItem {
    /**
     * @generated from protobuf field: int64 version = 1;
     */
    version: bigint;
    /**
     * @generated from protobuf field: int32 weight = 2;
     */
    weight: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class Environment$Type extends MessageType<Environment> {
    constructor() {
        super("application.Environment", [
            { no: 1, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "created_at", kind: "message", T: () => Timestamp },
            { no: 3, name: "updated_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "project_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "application_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "entrypoints", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "message", T: () => EnvironmentEntrypoints } }
        ]);
    }
    create(value?: PartialMessage<Environment>): Environment {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = "";
        message.projectId = "";
        message.applicationId = "";
        message.name = "";
        message.entrypoints = {};
        if (value !== undefined)
            reflectionMergePartial<Environment>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Environment): Environment {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string id */ 1:
                    message.id = reader.string();
                    break;
                case /* google.protobuf.Timestamp created_at */ 2:
                    message.createdAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdAt);
                    break;
                case /* google.protobuf.Timestamp updated_at */ 3:
                    message.updatedAt = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.updatedAt);
                    break;
                case /* string project_id */ 4:
                    message.projectId = reader.string();
                    break;
                case /* string application_id */ 5:
                    message.applicationId = reader.string();
                    break;
                case /* string name */ 6:
                    message.name = reader.string();
                    break;
                case /* map<string, application.EnvironmentEntrypoints> entrypoints */ 7:
                    this.binaryReadMap7(message.entrypoints, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap7(map: Environment["entrypoints"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof Environment["entrypoints"] | undefined, val: Environment["entrypoints"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = EnvironmentEntrypoints.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field application.Environment.entrypoints");
            }
        }
        map[key ?? ""] = val ?? EnvironmentEntrypoints.create();
    }
    internalBinaryWrite(message: Environment, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string id = 1; */
        if (message.id !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.id);
        /* google.protobuf.Timestamp created_at = 2; */
        if (message.createdAt)
            Timestamp.internalBinaryWrite(message.createdAt, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* google.protobuf.Timestamp updated_at = 3; */
        if (message.updatedAt)
            Timestamp.internalBinaryWrite(message.updatedAt, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string project_id = 4; */
        if (message.projectId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.projectId);
        /* string application_id = 5; */
        if (message.applicationId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.applicationId);
        /* string name = 6; */
        if (message.name !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.name);
        /* map<string, application.EnvironmentEntrypoints> entrypoints = 7; */
        for (let k of globalThis.Object.keys(message.entrypoints)) {
            writer.tag(7, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            EnvironmentEntrypoints.internalBinaryWrite(message.entrypoints[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message application.Environment
 */
export const Environment = new Environment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnvironmentEntrypoints$Type extends MessageType<EnvironmentEntrypoints> {
    constructor() {
        super("application.EnvironmentEntrypoints", [
            { no: 1, name: "rollout", kind: "message", T: () => EnvironmentRollout }
        ]);
    }
    create(value?: PartialMessage<EnvironmentEntrypoints>): EnvironmentEntrypoints {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<EnvironmentEntrypoints>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnvironmentEntrypoints): EnvironmentEntrypoints {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* application.EnvironmentRollout rollout */ 1:
                    message.rollout = EnvironmentRollout.internalBinaryRead(reader, reader.uint32(), options, message.rollout);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnvironmentEntrypoints, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* application.EnvironmentRollout rollout = 1; */
        if (message.rollout)
            EnvironmentRollout.internalBinaryWrite(message.rollout, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message application.EnvironmentEntrypoints
 */
export const EnvironmentEntrypoints = new EnvironmentEntrypoints$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnvironmentRollout$Type extends MessageType<EnvironmentRollout> {
    constructor() {
        super("application.EnvironmentRollout", [
            { no: 1, name: "canary", kind: "message", T: () => EnvironmentRolloutItem },
            { no: 2, name: "stable", kind: "message", T: () => EnvironmentRolloutItem }
        ]);
    }
    create(value?: PartialMessage<EnvironmentRollout>): EnvironmentRollout {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<EnvironmentRollout>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnvironmentRollout): EnvironmentRollout {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* application.EnvironmentRolloutItem canary */ 1:
                    message.canary = EnvironmentRolloutItem.internalBinaryRead(reader, reader.uint32(), options, message.canary);
                    break;
                case /* application.EnvironmentRolloutItem stable */ 2:
                    message.stable = EnvironmentRolloutItem.internalBinaryRead(reader, reader.uint32(), options, message.stable);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnvironmentRollout, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* application.EnvironmentRolloutItem canary = 1; */
        if (message.canary)
            EnvironmentRolloutItem.internalBinaryWrite(message.canary, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* application.EnvironmentRolloutItem stable = 2; */
        if (message.stable)
            EnvironmentRolloutItem.internalBinaryWrite(message.stable, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message application.EnvironmentRollout
 */
export const EnvironmentRollout = new EnvironmentRollout$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnvironmentRolloutItem$Type extends MessageType<EnvironmentRolloutItem> {
    constructor() {
        super("application.EnvironmentRolloutItem", [
            { no: 1, name: "version", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "weight", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<EnvironmentRolloutItem>): EnvironmentRolloutItem {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.version = 0n;
        message.weight = 0;
        if (value !== undefined)
            reflectionMergePartial<EnvironmentRolloutItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnvironmentRolloutItem): EnvironmentRolloutItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 version */ 1:
                    message.version = reader.int64().toBigInt();
                    break;
                case /* int32 weight */ 2:
                    message.weight = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnvironmentRolloutItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int64 version = 1; */
        if (message.version !== 0n)
            writer.tag(1, WireType.Varint).int64(message.version);
        /* int32 weight = 2; */
        if (message.weight !== 0)
            writer.tag(2, WireType.Varint).int32(message.weight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message application.EnvironmentRolloutItem
 */
export const EnvironmentRolloutItem = new EnvironmentRolloutItem$Type();

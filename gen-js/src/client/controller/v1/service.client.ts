// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "client/controller/v1/service.proto" (package "v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ControllerService } from "./service";
import type { GetWorkflowResponse } from "./service";
import type { GetWorkflowRequest } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetListEndpointResponse } from "./service";
import type { GetListEndpointRequest } from "./service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service v1.ControllerService
 */
export interface IControllerServiceClient {
    /**
     * @generated from protobuf rpc: GetListEndpoint(v1.GetListEndpointRequest) returns (v1.GetListEndpointResponse);
     */
    getListEndpoint(input: GetListEndpointRequest, options?: RpcOptions): UnaryCall<GetListEndpointRequest, GetListEndpointResponse>;
    /**
     * @generated from protobuf rpc: GetWorkflow(v1.GetWorkflowRequest) returns (v1.GetWorkflowResponse);
     */
    getWorkflow(input: GetWorkflowRequest, options?: RpcOptions): UnaryCall<GetWorkflowRequest, GetWorkflowResponse>;
}
/**
 * @generated from protobuf service v1.ControllerService
 */
export class ControllerServiceClient implements IControllerServiceClient, ServiceInfo {
    typeName = ControllerService.typeName;
    methods = ControllerService.methods;
    options = ControllerService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetListEndpoint(v1.GetListEndpointRequest) returns (v1.GetListEndpointResponse);
     */
    getListEndpoint(input: GetListEndpointRequest, options?: RpcOptions): UnaryCall<GetListEndpointRequest, GetListEndpointResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetListEndpointRequest, GetListEndpointResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetWorkflow(v1.GetWorkflowRequest) returns (v1.GetWorkflowResponse);
     */
    getWorkflow(input: GetWorkflowRequest, options?: RpcOptions): UnaryCall<GetWorkflowRequest, GetWorkflowResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetWorkflowRequest, GetWorkflowResponse>("unary", this._transport, method, opt, input);
    }
}
